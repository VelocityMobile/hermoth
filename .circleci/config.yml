version: 2.0

jobs:
  build:
    docker:
      - image: circleci/ruby:latest-node
    steps:
      - checkout

        # This should go into custom primary image, here's only for the sake of explanation


      - run:
          name: Install Docker Compose
          command: |
            set -e
            sudo chown -R $(whoami) /usr/local/bin
            sudo curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - run:
          name: Setup rabbbitmq
          command: |
            ruby -y -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"
            test -d ~/.linuxbrew && PATH="$HOME/.linuxbrew/bin:$PATH"
            test -d /home/linuxbrew/.linuxbrew && PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
            test -r ~/.bash_profile && echo 'export PATH="$(brew --prefix)/bin:$PATH"' >>~/.bash_profile
            echo 'export PATH="$(brew --prefix)/bin:$PATH"' >>~/.profile
            brew update
            brew install rabbitmq
            PATH=$PATH:/usr/local/sbin

      - run:
          name: Start rabbitmq
          command: rabbitmq-server

      - run:
          name: Install node
          command: |
            sudo apt-get update
            sudo apt-get install build-essential libssl-dev
            curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh -o install_nvm.sh
            bash install_nvm.sh
            source ~/.profile
            nvm install 8.0.0

      - run:
          name: Install dependecies
          command: npm install

      - run:
          name: Run tests
          command: |
            docker ps
            npm test

  deploy:
    docker:
      - image: circleci/node:8.3.0
    steps:
      - checkout

      - run:
          name: Check npm package version
          command: ./deploy/check-publish-version

      - run:
          name: Publish package to npm
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              npm publish
            else
              echo "Not on master branch so not publishing to npm
            fi
# Ensure jobs are run sequentially
# Publish should only be run once and if tests pass

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master